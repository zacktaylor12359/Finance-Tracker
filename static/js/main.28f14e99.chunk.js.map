{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/MonthlyExpensesChart.js","components/Expenses/YearlyExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","onChange","event","preventDefault","onChangeFilterYear","target","value","defaultYear","ExpenseDate","date","Date","toLocaleString","month","getUTCFullYear","getUTCDate","ExpenseItem","title","amount","ExpensesList","expenseInfo","length","map","expense","id","ChartBar","barFillHeight","console","log","maxValue","Math","round","style","height","label","Chart","dataPoints","dataPointValues","dataPoint","totalMaximum","max","MonthlyExpensesChart","chartDataPoints","expenses","expenseMonth","getMonth","YearlyExpensesChart","expenseYear","getFullYear","toString","result","find","push","Expenses","useState","year","setYear","filteredExpenses","filter","enteredFilterYear","filterYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","expenseData","onSaveExpenseData","type","min","step","onClick","onCancelClick","NewExpense","showExpenseForm","setShowExpenseForm","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28f14e99.chunk.js","sourcesContent":["import \"./Card.css\"\n\nfunction Card (props) {\n    const classes= 'card ' + props.className\n    return <div className = {classes}>{props.children}</div>\n}\n\nexport default Card","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n\tconst yearChangeHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tprops.onChangeFilterYear(event.target.value);\n\t};\n\n\treturn (\n\t\t<div className=\"expenses-filter\">\n\t\t\t<div className=\"expenses-filter__control\">\n\t\t\t\t<label>Filter by year</label>\n\t\t\t\t<select onChange={yearChangeHandler} value={props.defaultYear}>\n\t\t\t\t\t<option value=\"Show All\">Show All</option>\n\t\t\t\t\t<option value=\"2022\">2022</option>\n\t\t\t\t\t<option value=\"2021\">2021</option>\n\t\t\t\t\t<option value=\"2020\">2020</option>\n\t\t\t\t\t<option value=\"2019\">2019</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ExpensesFilter;\n","import \"./ExpenseDate.css\";\n\nfunction ExpenseDate(props) {\n\tconst date = new Date(props.date);\n\treturn (\n\t\t<div className=\"expense-date\">\n\t\t\t<div className=\"expense-date__month\">\n\t\t\t\t{date.toLocaleString(\"default\", { month: \"short\" })}\n\t\t\t</div>\n\t\t\t<div className=\"expense-date__year\">{date.getUTCFullYear()}</div>\n\t\t\t<div className=\"expense-date__day\">{date.getUTCDate()}</div>\n\t\t</div>\n\t);\n}\n\nexport default ExpenseDate;\n","import \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nfunction ExpenseItem(props) {\n\treturn (\n\t\t<li>\n\t\t\t<Card className=\"expense-item\">\n\t\t\t\t<ExpenseDate date={props.date} />\n\n\t\t\t\t<div className=\"expense-item__description\">\n\t\t\t\t\t<h2>{props.title}</h2>\n\t\t\t\t\t<div className=\"expense-item__price\">${props.amount}</div>\n\t\t\t\t</div>\n\t\t\t</Card>\n\t\t</li>\n\t);\n}\n\nexport default ExpenseItem;\n","import \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\n\nconst ExpensesList = (props) => {\n\tif (props.expenseInfo.length === 0) {\n\t\treturn <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\n\t}\n\treturn (\n\t\t<ul className=\"expenses-list\">\n\t\t\t{props.expenseInfo.map((expense) => (\n\t\t\t\t<ExpenseItem\n\t\t\t\t\tkey={expense.id}\n\t\t\t\t\ttitle={expense.title}\n\t\t\t\t\tamount={expense.amount}\n\t\t\t\t\tdate={expense.date}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n\nexport default ExpensesList;\n","import './ChartBar.css';\n\nconst ChartBar = (props) => {\n\tlet barFillHeight = '0%';\n\n\tconsole.log(props.maxValue);\n\n\tif (props.maxValue > 0) {\n\t\tbarFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n\t}\n\treturn (\n\t\t<div className='chart-bar'>\n\t\t\t<div className='chart-bar__inner'>\n\t\t\t\t<div\n\t\t\t\t\tclassName='chart-bar__fill'\n\t\t\t\t\tstyle={{ height: barFillHeight }}\n\t\t\t\t></div>\n\t\t\t</div>\n\n\t\t\t<div className='chart-bar__label'>{props.label}</div>\n\t\t</div>\n\t);\n};\n\nexport default ChartBar;\n","import './Chart.css';\nimport ChartBar from './ChartBar';\n\nconst Chart = (props) => {\n\tconsole.log(props.dataPoints);\n\tconst dataPointValues = props.dataPoints.map(\n\t\t(dataPoint) => dataPoint.value\n\t);\n\tconst totalMaximum = Math.max(...dataPointValues);\n\treturn (\n\t\t<div className='chart'>\n\t\t\t{props.dataPoints.map((dataPoint) => (\n\t\t\t\t<ChartBar\n\t\t\t\t\tkey={dataPoint.label}\n\t\t\t\t\tvalue={dataPoint.value}\n\t\t\t\t\tmaxValue={totalMaximum}\n\t\t\t\t\tlabel={dataPoint.label}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default Chart;\n","import Chart from '../Chart/Chart';\n\nconst MonthlyExpensesChart = (props) => {\n\tconst chartDataPoints = [\n\t\t{ label: 'Jan', value: 0 },\n\t\t{ label: 'Feb', value: 0 },\n\t\t{ label: 'Mar', value: 0 },\n\t\t{ label: 'Apr', value: 0 },\n\t\t{ label: 'May', value: 0 },\n\t\t{ label: 'Jun', value: 0 },\n\t\t{ label: 'Jul', value: 0 },\n\t\t{ label: 'Aug', value: 0 },\n\t\t{ label: 'Sep', value: 0 },\n\t\t{ label: 'Oct', value: 0 },\n\t\t{ label: 'Nov', value: 0 },\n\t\t{ label: 'Dec', value: 0 },\n\t];\n\n\tfor (const expense of props.expenses) {\n\t\tconst expenseMonth = expense.date.getMonth();\n\t\tconsole.log('monthly', expense.date.getMonth());\n\t\tchartDataPoints[expenseMonth].value += expense.amount;\n\t}\n\n\treturn <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default MonthlyExpensesChart;\n","import Chart from '../Chart/Chart';\n\nconst YearlyExpensesChart = (props) => {\n\tconst chartDataPoints = [];\n\tfor (const expense of props.expenses) {\n\t\tconst expenseYear = expense.date.getFullYear().toString();\n\n\t\tlet result = chartDataPoints.find((dataPoint) => {\n\t\t\treturn dataPoint.label === expenseYear;\n\t\t});\n\n\t\tif (!result) {\n\t\t\tchartDataPoints.push({ label: expenseYear, value: 0 });\n\t\t\tresult = chartDataPoints.find((dataPoint) => {\n\t\t\t\treturn dataPoint.label === expenseYear;\n\t\t\t});\n\t\t}\n\n\t\tresult.value += expense.amount;\n\t}\n\n\treturn <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default YearlyExpensesChart;\n","import React, { useState } from 'react';\nimport './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpensesList from './ExpensesList';\nimport MonthlyExpensesChart from './MonthlyExpensesChart';\nimport YearlyExpensesChart from './YearlyExpensesChart';\nfunction Expenses(props) {\n\tconst [year, setYear] = useState('Show All');\n\n\tconst filterChangeHandler = (enteredFilterYear) => {\n\t\tconsole.log(enteredFilterYear);\n\t\tsetYear(enteredFilterYear);\n\t};\n\n\tconst filteredExpenses = props.expenseInfo.filter((expense) => {\n\t\tif (year === 'Show All') {\n\t\t\treturn expense;\n\t\t} else {\n\t\t\treturn expense.date.getFullYear().toString() === year;\n\t\t}\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<Card className='expenses'>\n\t\t\t\t<ExpensesFilter\n\t\t\t\t\tonChangeFilterYear={filterChangeHandler}\n\t\t\t\t\tdefaultYear={year}\n\t\t\t\t/>\n\t\t\t\t{year === 'Show All' ? (\n\t\t\t\t\t<YearlyExpensesChart expenses={filteredExpenses} />\n\t\t\t\t) : (\n\t\t\t\t\t<MonthlyExpensesChart expenses={filteredExpenses} />\n\t\t\t\t)}\n\t\t\t\t<ExpensesList\n\t\t\t\t\tfilterYear={year}\n\t\t\t\t\texpenseInfo={filteredExpenses}\n\t\t\t\t/>\n\t\t\t</Card>\n\t\t</div>\n\t);\n}\n\nexport default Expenses;\n","import React, { useState } from 'react';\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n\tconst [enteredTitle, setEnteredTitle] = useState('');\n\tconst [enteredAmount, setEnteredAmount] = useState('');\n\tconst [enteredDate, setEnteredDate] = useState('');\n\n\tconst titleChangeHandler = (event) => {\n\t\tsetEnteredTitle(event.target.value);\n\t};\n\n\tconst amountChangeHandler = (event) => {\n\t\tsetEnteredAmount(event.target.value);\n\t};\n\n\tconst dateChangeHandler = (event) => {\n\t\tsetEnteredDate(event.target.value);\n\t};\n\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst expenseData = {\n\t\t\ttitle: enteredTitle,\n\t\t\tamount: +enteredAmount,\n\t\t\tdate: new Date(enteredDate),\n\t\t};\n\n\t\tconsole.log(typeof enteredDate);\n\t\tprops.onSaveExpenseData(expenseData);\n\n\t\tsetEnteredTitle('');\n\t\tsetEnteredAmount('');\n\t\tsetEnteredDate('');\n\t};\n\n\tconst cancelHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tprops.onCancelClick();\n\t};\n\n\treturn (\n\t\t<form onSubmit={submitHandler}>\n\t\t\t<div className='new-expense__controls'>\n\t\t\t\t<div className='new-expense__control'>\n\t\t\t\t\t<label>Title</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={enteredTitle}\n\t\t\t\t\t\tonChange={titleChangeHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='new-expense__control'>\n\t\t\t\t\t<label>Amount</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tmin='0.01'\n\t\t\t\t\t\tstep='0.01'\n\t\t\t\t\t\tvalue={enteredAmount}\n\t\t\t\t\t\tonChange={amountChangeHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='new-expense__control'>\n\t\t\t\t\t<label>Date</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tmin='2021-01-01'\n\t\t\t\t\t\tmax='2121-12-31'\n\t\t\t\t\t\tvalue={enteredDate}\n\t\t\t\t\t\tonChange={dateChangeHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='new-expense__actions'>\n\t\t\t\t<button type='button' onClick={cancelHandler}>\n\t\t\t\t\tCancel\n\t\t\t\t</button>\n\t\t\t\t<button type='submit'>Add Expense</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default ExpenseForm;\n","import { useState } from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n\tconst [showExpenseForm, setShowExpenseForm] = useState(false);\n\tconst saveExpenseDataHandler = (enteredExpenseData) => {\n\t\tconst expenseData = {\n\t\t\t...enteredExpenseData,\n\t\t\tid: Math.random().toString(),\n\t\t};\n\n\t\tprops.onAddExpense(expenseData);\n\t\tsetShowExpenseForm(false);\n\t};\n\n\tconst hideExpenseHandler = () => {\n\t\tsetShowExpenseForm(false);\n\t};\n\n\tconst showExpenseHandler = () => {\n\t\tsetShowExpenseForm(true);\n\t};\n\n\treturn (\n\t\t<div className=\"new-expense\">\n\t\t\t{showExpenseForm === false ? (\n\t\t\t\t<button onClick={showExpenseHandler}>Add Expense</button>\n\t\t\t) : (\n\t\t\t\t<ExpenseForm\n\t\t\t\t\tonSaveExpenseData={saveExpenseDataHandler}\n\t\t\t\t\tonCancelClick={hideExpenseHandler}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n\t{\n\t\tid: \"e1\",\n\t\ttitle: \"Toilet Paper\",\n\t\tamount: 94.12,\n\t\tdate: new Date(2020, 7, 14),\n\t},\n\t{\n\t\tid: \"e2\",\n\t\ttitle: \"New TV\",\n\t\tamount: 799.49,\n\t\tdate: new Date(2021, 2, 12),\n\t},\n\t{\n\t\tid: \"e3\",\n\t\ttitle: \"Car Insurance\",\n\t\tamount: 294.67,\n\t\tdate: new Date(2021, 2, 28),\n\t},\n\t{\n\t\tid: \"e4\",\n\t\ttitle: \"New Desk (Wooden)\",\n\t\tamount: 450,\n\t\tdate: new Date(2021, 5, 12),\n\t},\n];\n\nconst App = () => {\n\tconst [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n\tconst addExpenseHandler = (expense) => {\n\t\tsetExpenses((prevExpenses) => {\n\t\t\treturn [expense, ...prevExpenses];\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<NewExpense onAddExpense={addExpenseHandler} />\n\t\t\t<Expenses expenseInfo={expenses} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}